import VideoPlayerStep from "./VideoPlayerStep";
import VideoPlayerContainer from "./VideoPlayerContainer";

const MainSection = ({
  videoRef,
  videoLoaded,
  videoInfo,
  isPlaying,
  setIsPlaying,
  handleMetadataLoaded,
  handleTimeUpdate,
  handleSnapshot,
  captureSnapshot,
  handleAutoCaptureKeyFrames,
  autoSnapInterval,
  setAutoSnapInterval,
  toggleAutoSnap,
  snapshots,
  selectedSnapshotIndex,
  canGoToTextAndPreview,
  handleSelectSnapshot,
  handleSaveSnapshot,
  handleDeleteSnapshot,
  handleSaveAllSnapshots,
  setSnapshots,
  setSelectedSnapshotIndex,
  setProcessedFrame,
  setProcessedImageSrc,
  processedFrame,
  zoomLevel,
  setZoomLevel,
  imageFilters,
  setImageFilters,
  handleUndo,
  handleRedo,
  undoStack,
  redoStack,
  handleCreateThumbnail,
  handleApplyFilters,
  resetFilters,
  applyPresetFilter,
  isProcessing,
  isCreatingThumbnail,
  setIsProcessing,
  setUndoStack,
  setRedoStack,
  handleRemoveBackground,
  backgroundRemoved,
  setCanGoToTextAndPreview,
  textElements,
  setTextElements,
  finalThumbnail,
  handleSaveFinalThumbnail,
  processedImageSrc,
}: any) => {
  return (
    <div id="main-section" className="space-y-4 sm:space-y-6">
      <div className="relative">
        <VideoPlayerContainer
          VideoSection={VideoPlayerStep}
          videoRef={videoRef}
          videoLoaded={videoLoaded}
          videoInfo={videoInfo}
          isPlaying={isPlaying}
          setIsPlaying={setIsPlaying}
          handleMetadataLoaded={handleMetadataLoaded}
          handleTimeUpdate={handleTimeUpdate}
          handleSnapshot={handleSnapshot}
          captureSnapshot={captureSnapshot}
          handleAutoCaptureKeyFrames={handleAutoCaptureKeyFrames}
          autoSnapInterval={autoSnapInterval}
          setAutoSnapInterval={setAutoSnapInterval}
          toggleAutoSnap={toggleAutoSnap}
          snapshots={snapshots}
          selectedSnapshotIndex={selectedSnapshotIndex}
          canGoToTextAndPreview={canGoToTextAndPreview}
          handleSelectSnapshot={handleSelectSnapshot}
          handleSaveSnapshot={handleSaveSnapshot}
          handleDeleteSnapshot={handleDeleteSnapshot}
          handleSaveAllSnapshots={handleSaveAllSnapshots}
          setSnapshots={setSnapshots}
          setSelectedSnapshotIndex={setSelectedSnapshotIndex}
          setProcessedFrame={setProcessedFrame}
          setProcessedImageSrc={setProcessedImageSrc}
          processedFrame={processedFrame}
          zoomLevel={zoomLevel}
          setZoomLevel={setZoomLevel}
          imageFilters={imageFilters}
          setImageFilters={setImageFilters}
          handleUndo={handleUndo}
          handleRedo={handleRedo}
          undoStack={undoStack}
          redoStack={redoStack}
          handleCreateThumbnail={handleCreateThumbnail}
          handleApplyFilters={handleApplyFilters}
          resetFilters={resetFilters}
          applyPresetFilter={applyPresetFilter}
          isProcessing={isProcessing}
          isCreatingThumbnail={isCreatingThumbnail}
          setIsProcessing={setIsProcessing}
          setUndoStack={setUndoStack}
          setRedoStack={setRedoStack}
          handleRemoveBackground={handleRemoveBackground}
          backgroundRemoved={backgroundRemoved}
          setCanGoToTextAndPreview={setCanGoToTextAndPreview}
          textElements={textElements}
          setTextElements={setTextElements}
          finalThumbnail={finalThumbnail}
          handleSaveFinalThumbnail={handleSaveFinalThumbnail}
          processedImageSrc={processedImageSrc}
        />
      </div>
    </div>
  );
};

export default MainSection;
